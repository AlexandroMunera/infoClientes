@model infoClientes.Models.Cliente

@{
    ViewBag.Title = "Editar";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idCliente)

        <div class="form-group">
            @Html.LabelFor(model => model.Nit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Telefono, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ciudad.Departamento.Pais.idPais, "Pais", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Paises", null, "Selecciones un pais", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Ciudad.Departamento.Pais.idPais, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ciudad.Departamento.idDepartamento, "Departamento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                <select class="form-control" data-val="true" data-val-number="The field departament must be a number."
                        data-val-required="El campo departamento es obligatorio." id="idDepartamento" name="idDepartamento">
                    <option value="">Seleccione un departamento</option>
                </select>

                @Html.ValidationMessageFor(model => model.Ciudad.Departamento.idDepartamento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idCiudad, "Ciudad", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                <select class="form-control" data-val="true" data-val-number="The field city must be a number."
                        data-val-required="El campo ciudad es obligatorio." id="idCiudad" name="idCiudad">
                    <option value="">Seleccione una ciudad</option>
                </select>

                @Html.ValidationMessageFor(model => model.idCiudad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cupo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cupo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cupo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SaldoCupo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaldoCupo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SaldoCupo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PorcentajeVisitas, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PorcentajeVisitas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PorcentajeVisitas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(document).ready(function () {

        $('#Paises').change(function () {

            var url = '@Url.Action("GetDepartamentos","Clientes")';

            $.ajax({
                type: "post",
                url: url,
                data: { idPais: $('#Paises').val() },
                datatype: "json",
                success: function (data) {

                    if (data != null) {

                        $('#idDepartamento').empty();

                        $.each(data, function (index, data) {
                            $('#idDepartamento').append('<option value="' + data.Value + '">' + data.Text + '</option>');
                        });
                    }
                }
            });
        });

        $('#idDepartamento').change(function () {

            var url = '@Url.Action("GetCiudades","Clientes")';

            $.ajax({
                type: "post",
                url: url,
                data: { idDepartamento: $('#idDepartamento').val() },
                datatype: "json",
                success: function (data) {

                    if (data != null) {

                        $('#idCiudad').empty();

                        $.each(data, function (index, data) {
                            $('#idCiudad').append('<option value="' + data.Value + '">' + data.Text + '</option>');
                        });
                    }
                }
            });
        });
    });
</script>